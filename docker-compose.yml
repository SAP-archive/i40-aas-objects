version: '3.7'
services:
  ## i40-aas containers
  i40-aas-onboarding-skill:
    ## TODO: Proposal to create org on Dockerhub and release images once this repo is Open Source, allows skipping build process
    # image: i40-aas/onboarding-skill
    build:
      context: apps/onboarding-skill
      dockerfile: ../../docker/onboarding-skill/Dockerfile
    env_file:
      - .compose-envs/mongodb.env
      - .compose-envs/rabbitmq.env
      - .compose-envs/serviceaddresses.env
  i40-aas-https-endpoint:
    build:
      context: apps/https-endpoint
      dockerfile: ../../docker/https-endpoint/Dockerfile
    ports:
      - "2000:2000"
    env_file:
      - .compose-envs/rabbitmq.env
  i40-aas-https-endpoint-egress:
    build:
      context: apps/https-endpoint-egress
      dockerfile: ../../docker/https-endpoint-egress/Dockerfile
    env_file:
      - .compose-envs/postgres.env
      - .compose-envs/rabbitmq.env
      - .compose-envs/serviceaddresses.env
  i40-aas-data-manager:
    build:
      context: apps/data-manager
      dockerfile: ../../docker/data-manager/Dockerfile
    env_file:
      - .compose-envs/serviceaddresses.env
  i40-aas-registry:
    build:
      context: apps/registry
      dockerfile: ../../docker/registry/Dockerfile
    env_file:
      - .compose-envs/postgres.env
  i40-aas-adapter-registry:
    build: 
      context: apps/adapter-registry
      dockerfile: ../../docker/adapter-registry/Dockerfile
    env_file:
      - .compose-envs/serviceaddresses.env
  i40-aas-storage-adapter-mongodb:
    build:
      context: apps/storage-adapter-mongodb
      dockerfile: ../../docker/storage-adapter-mongodb/Dockerfile
    ports:
      - "3100:3100"
    env_file:
      - .compose-envs/mongodb.env
      - .compose-envs/serviceaddresses.env

  ## used services
  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    env_file:
      - .compose-envs/mongodb.env
  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    env_file:
      - .compose-envs/postgres.env
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    env_file:
      - .compose-envs/pgadmin.env
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
      - "1883:1883"
    volumes:
      - ./helm/kubernetes/rabbitmq-broker/enabled_plugins:/etc/rabbitmq/enabled_plugins

